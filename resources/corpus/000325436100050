Platelet-biased stem cells reside at the apex of the haematopoietic stem-cell hierarchy
The blood system is maintained by a small pool of haematopoietic stem cells (HSCs), which are required and sufficient for replenishing all human blood cell lineages at millions of cells per second throughout life. Megakaryocytes in the bone marrow are responsible for the continuous production of platelets in the blood, crucial for preventing bleeding-a common and life-threatening side effect of many cancer therapies-and major efforts are focused at identifying the most suitable cellular and molecular targets to enhance platelet production after bone marrow transplantation or chemotherapy(1). Although it has become clear that distinct HSC subsets exist that are stably biased towards the generation of lymphoid or myeloid blood cells(2-4), we are yet to learn whether other types of lineage-biased HSC exist or understand their inter-relationships and how differently lineage-biased HSCs are generated and maintained. The functional relevance of notable phenotypic and molecular similarities between megakaryocytes and bone marrow cells with an HSC cell-surface phenotype(5-8) remains unclear. Here we identify and prospectively isolate a molecularly and functionally distinct mouse HSC subset primed for platelet-specific gene expression, with enhanced propensity for short-and long-term reconstitution of platelets. Maintenance of platelet-biased HSCs crucially depends on thrombopoietin, the primary extrinsic regulator of platelet development(9). Platelet-primed HSCs also frequently have a long-term myeloid lineage bias, can self-renew and give rise to lymphoid-biased HSCs. These findings show that HSC subtypes can be organized into a cellular hierarchy, with platelet-primed HSCs at the apex. They also demonstrate that molecular and functional priming for platelet development initiates already in a distinct HSC population. The identification of a platelet-primed HSC population should enable the rational design of therapies enhancing platelet output.
